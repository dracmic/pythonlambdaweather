name: "Terraform"

on:
  push:
  pull_request:

jobs:
  
  terraformfmt:
    name: "Terraform FMT"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Format
        uses: hashicorp/terraform-github-actions@master
        with: 
         tf_actions_version: latest
         tf_actions_working_dir: '.'
         tf_actions_comment: true
         tf_actions_subcommand: 'fmt'
         args: '-check'

  terraformvalidate:
    name: "Terraform Validate"
    runs-on: ubuntu-latest
    needs: [terraformfmt]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform init
        uses: hashicorp/terraform-github-actions@master
        with: 
         tf_actions_version: latest
         tf_actions_working_dir: '.'
         tf_actions_comment: true
         tf_actions_subcommand: 'init'
         args: '-backend=false'

      - name: Terraform Validate
        uses: hashicorp/terraform-github-actions@master
        with:
         tf_actions_version: latest
         tf_actions_working_dir: '.'
         tf_actions_comment: true
         tf_actions_subcommand: 'validate'

  terraformplan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    needs: [terraformvalidate]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform init
        uses: hashicorp/terraform-github-actions@master
        env:
         AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
         AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
         AWS_REGION: "eu-west-1"
        with: 
         tf_actions_version: latest 
         tf_actions_working_dir: '.' 
         tf_actions_comment: true 
         tf_actions_subcommand: 'init' 
      - name: Do the plan
        uses: hashicorp/terraform-github-actions@master
        env: 
         AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
         AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
         AWS_REGION: "eu-west-1"
        with:
         tf_actions_version: latest
         tf_actions_working_dir: '.'
         tf_actions_comment: true
         tf_actions_subcommand: 'plan'

  terraformapply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: [terraformplan]
    steps:
      - name: Checkout
        uses: actions/checkout@v3 
      - name: Terraform Apply Weather Lambda
        env: 
         AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
         AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
         AWS_REGION: "eu-west-1"    
        run: AWS_SDK_LOAD_CONFIG=1 terraform init; AWS_SDK_LOAD_CONFIG=1 terraform apply -auto-approve
    #  - name: Terraform Update Tfstate
    #    run: |
    #      git fetch --all
    #      git checkout $BRANCHNAME 
    #      git pull --all
    #      git add .
    #      CHANGES=$(git status --porcelain | wc -l)
    #      if [ "$CHANGES" -gt "0" ]; then
    #      git config --global user.name "Automated TFstate_Update"
    #      git config --global user.email "valentin.ursu@gmail.com"
    #      git remote set-url origin https://${{ github.actor }}:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}
    #      git commit -am "Automated tfstate update"
    #      git push
    #      fi
 
